syntax = "proto3";
package featureprobe.link;
option java_package = "com.featureprobe.link";

import "client.proto";

message Trace {
  string trace_id = 1;
  string span_id = 2;
}

message JoinReq {
  string sid = 1;
  string namespace = 2;
  optional string room_prefix = 3;
  string room = 4;
  Trace trace = 10;
}

message JoinResp { bool success = 1; }

message BulkJoinReq {
  string sid = 1;
  string namespace = 2;
  map<string, string> rooms = 3;
  Trace trace = 10;
}

message BulkJoinResp { bool success = 1; }

message LeaveReq {
  string sid = 1;
  string namespace = 2;
  optional string room_prefix = 3;
  string room = 4;
  Trace trace = 10;
}

message LeaveResp { bool success = 1; }

message EmitReq {
  Message message = 1;
  optional string room_prefix = 2;
  repeated string rooms = 3;
  bool success_channel = 4;
  Trace trace = 10;
}

message BulkEmitReq { repeated EmitReq requests = 1; }

message EmitSidReq {
  string sid = 1;
  Message message = 2;
  Trace trace = 10;
}

message EmitSidResp {
  bool success = 1;
  bool sent = 2;
}

message EmitResp {
  bool success = 1;
  repeated string rooms = 2;
  repeated EmitStatus status = 3;
}

message BulkEmitResp { repeated EmitResp responses = 1; }

message ConnRoomReq {
  string namespace = 1;
  optional string room_prefix = 2;
  string room = 3;
  Trace trace = 10;
}

message Rooms { repeated string rooms = 1; }

message ConnRooms {
  string sid = 1;
  map<string, Rooms> rooms = 2;
}

message EmitStatus {
  ConnRooms rooms = 1;
  bool sent = 2;
}

message ConnRoomResp {
  bool success = 1;
  repeated ConnRooms rooms = 2;
}

message GetRoomsReq {
  string namespace = 1;
  optional string room_prefix = 2;
  Rooms Rooms = 3;
  Trace trace = 10;
}

message GetChannelsResp {
  string namespace = 1;
  optional string room_prefix = 2;
  Rooms Rooms = 3;
}

service LinkService {
  rpc Join(JoinReq) returns (JoinResp) {}
  rpc Leave(LeaveReq) returns (LeaveResp) {}
  rpc BulkJoin(BulkJoinReq) returns (BulkJoinResp) {}
  rpc EmitSid(EmitSidReq) returns (EmitSidResp) {}
  rpc Emit(EmitReq) returns (EmitResp) {}
  rpc BulkEmit(BulkEmitReq) returns (BulkEmitResp) {}
  rpc GetConnRooms(ConnRoomReq) returns (ConnRoomResp) {}
  rpc GetRooms(GetRoomsReq) returns (GetChannelsResp) {}
}

message MessageReq {
  string sid = 1;
  Message message = 2;
  map<string, Rooms> rooms = 3;
  Trace trace = 10;
}

message MessageResp { int64 success_num = 1; }

service MessageService {
  rpc HandleMessage(MessageReq) returns (MessageResp) {}
}