syntax = "proto3";

package featureprobe.link.service;

option java_package = "com.featureprobe.link.service";

message Packet {
  oneof packet {
    Ping ping = 1;
    Pong pong = 2;
    Message message = 3;
  }
}

message Ping { uint64 timestamp = 1; }

message Pong { uint64 timestamp = 1; }

message Message {
  string namespace = 1;
  string path = 2;
  map<string, string> metadata = 3;
  bytes body = 4;
}

message Trace {
  string trace_id = 1;
  string span_id = 2;
}

message SubReq {
  string cid = 1;
  string namespace = 2;
  optional string channel_family = 3;
  string channel = 4;
  Trace trace = 10;
}

message SubResp { bool success = 1; }

message BulkSubReq {
  string cid = 1;
  string namespace = 2;
  map<string, string> channels = 3;
  Trace trace = 10;
}

message BulkSubResp { bool success = 1; }

message UnSubReq {
  string cid = 1;
  string namespace = 2;
  optional string channel_family = 3;
  string channel = 4;
  Trace trace = 10;
}

message UnSubResp { bool success = 1; }

message PubReq {
  Message message = 1;
  optional string channel_family = 2;
  repeated string channels = 3;
  bool success_channel = 4;
  Trace trace = 10;
}

message BulkPubReq { repeated PubReq requests = 1; }

message PushConnReq {
  string cid = 1;
  Message message = 2;
  Trace trace = 10;
}

message PushConnResp {
  bool success = 1;
  bool sent = 2;
}

message PubResp {
  bool success = 1;
  // channels is emtry when PubReq success_channel is false
  repeated string channels = 2;
  repeated PubStatus status = 3;
}

message BulkPubResp { repeated PubResp responses = 1; }

message GetConnsReq {
  string namespace = 1;
  optional string channel_family = 2;
  string channel = 3;
  Trace trace = 10;
}

message Channels { repeated string channel = 1; }

message ConnChannels {
  string cid = 1;
  map<string, Channels> channels = 2;
}

message PubStatus {
  ConnChannels conn_channels = 1;
  bool sent = 2;
}

message GetConnsResp {
  bool success = 1;
  repeated ConnChannels conn_channels = 2;
}

message GetChannelsReq {
  string namespace = 1;
  optional string channel_family = 2;
  Channels Channels = 3;
  Trace trace = 10;
}

message GetChannelsResp {
  string namespace = 1;
  optional string channel_family = 2;
  Channels Channels = 3;
}

service ChannelService {
  rpc Subscribe(SubReq) returns (SubResp) {}
  rpc UnSubscribe(UnSubReq) returns (UnSubResp) {}
  rpc BulkSubscribe(BulkSubReq) returns (BulkSubResp) {}
  rpc PushConn(PushConnReq) returns (PushConnResp) {}
  rpc Publish(PubReq) returns (PubResp) {}
  rpc BulkPushlish(BulkPubReq) returns (PubResp) {}
  rpc GetConnChannels(GetConnsReq) returns (GetConnsResp) {}
  rpc GetChannels(GetChannelsReq) returns (GetChannelsResp) {}
}

message MessageReq {
  string cid = 1;
  Message message = 2;
  map<string, Channels> channels = 3;
  Trace trace = 10;
}

message MessageResp { int64 num = 1; }

service MessageService {
  rpc HandleMessage(MessageReq) returns (MessageResp) {}
}